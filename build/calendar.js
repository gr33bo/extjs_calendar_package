Ext.define("CalendarPackage.model.Base",{extend:"Ext.data.Model",requires:["Ext.data.Model"],schema:{namespace:"CalendarPackage.model"}});Ext.define("CalendarPackage.model.Event",{extend:"Ext.data.Model",fields:[{name:"id",type:"integer",useNull:true},{name:"title",type:"string"},{name:"start_date",type:"date",dateFormat:"Y-m-d H:i:s O"},{name:"end_date",type:"date",dateFormat:"Y-m-d H:i:s O"}]});Ext.define("CalendarPackage.view.CalendarMainController",{extend:"Ext.app.ViewController",requires:["Ext.window.MessageBox"],alias:"controller.calendarmaincontroller",onDatePickerSelect:function(b,a){console.log("SELECTED "+a)},onMonthPanelRender:function(a){console.log(a)}});Ext.define("CalendarPackage.view.CalendarMainModel",{extend:"Ext.app.ViewModel",alias:"viewmodel.calendarmainmodel",requires:["CalendarPackage.model.Event"],stores:{events:{model:"CalendarPackage.model.Event",autoLoad:true,autoSync:false,remoteFilter:false,remoteSort:false,data:[{id:1,title:"RAWR",start_date:"2015-05-01 12:00:00",end_date:"2015-05-02 12:00:00"},{id:2,title:"RAWR2",start_date:"2015-05-03 12:00:00",end_date:"2015-05-11 12:00:00"}]}}});Ext.define("CalendarPackage.view.DatePickerPanel",{extend:"Ext.panel.Panel",alias:["widget.datepickerpanel"],requires:["Ext.layout.container.VBox","Ext.picker.Date"],minWidth:215,layout:{type:"vbox"},items:[{xtype:"datepicker",reference:"calendarPackageDatePicker",listeners:{select:"onDatePickerSelect",render:function(){}}}]});Ext.define("CalendarPackage.view.MonthPanel",{extend:"Ext.Component",alias:["widget.monthpanel"],requires:[],baseCls:"calendar-package",prevCls:"previous-month",nextCls:"next-month",startDay:0,numDays:42,focusable:true,initHour:12,childEls:["innerEl","eventEl"],renderTpl:['<div id="{id}-innerEl" data-ref="innerEl" class="{baseCls}">','<div id="{id}-eventEl" data-ref="eventEl" class="{baseCls}-inner">','<div class="{baseCls}-header">','<table class="header-row" cellpadding="0" cellspacing="0">',"<tr>",'<tpl for="dayNames">','<td class="{parent.baseCls}-column-header">{.}</td>',"</tpl>","</tr>","</table>","</div>",'<div class="days-container">','<div class="week">','<table class="week-row" cellpadding="0" cellspacing="0">',"<tr>",'<tpl for="days">',"{#:this.isEndOfWeek}",'<td class="week-day"></td>',"</tpl>","</tr>","</table>","</div>","</div>","</div>","</div>",{firstInitial:function(a){return Ext.picker.Date.prototype.getDayInitial(a)},isEndOfWeek:function(b){b--;var a=b%7===0&&b!==0;return a?'</tr></table></div><div class="week"><table class="week-row" cellpadding="0" cellspacing="0"><tr>':""},renderTodayBtn:function(a,b){Ext.DomHelper.generateMarkup(a.$comp.todayBtn.getRenderTree(),b)},renderMonthBtn:function(a,b){Ext.DomHelper.generateMarkup(a.$comp.monthBtn.getRenderTree(),b)}}],initComponent:function(){var b=this,a=Ext.Date.clearTime;b.value=a(new Date());b.value=a(new Date(2015,4,12));b.format=Ext.Date.defaultFormat;b.dayNames=Ext.Date.dayNames;b.dayNames=b.dayNames.slice(b.startDay).concat(b.dayNames.slice(0,b.startDay));this.callParent()},beforeRender:function(){var b=this,c=new Array(b.numDays),a=Ext.Date.format(new Date(),b.format);Ext.applyIf(b,{renderData:{}});Ext.apply(b.renderData,{dayNames:b.dayNames,days:c})},onRender:function(b,a){var c=this;c.callParent(arguments);c.cells=c.el.select("td.week-day");c.fullUpdate(c.value);this.fireEvent("monthpanelrender",this)},fullUpdate:function(z){var D=this,e=D.cells.elements,d=D.textNodes,F=D.disabledCellCls,m=Ext.Date,v=0,C=0,k=+m.clearTime(z,true),y=+m.clearTime(new Date()),t=D.minDate?m.clearTime(D.minDate,true):Number.NEGATIVE_INFINITY,u=D.maxDate?m.clearTime(D.maxDate,true):Number.POSITIVE_INFINITY,B=D.disabledDatesRE,s=D.disabledDatesText,G=D.disabledDays?D.disabledDays.join(""):false,A=D.disabledDaysText,w=D.format,j=m.getDaysInMonth(z),p=m.getFirstDateOfMonth(z),f=p.getDay()-D.startDay,x=m.add(z,m.MONTH,-1),h,q,a,E,l,n,b,g,r;if(f<0){f+=7}j+=f;h=m.getDaysInMonth(x)-f;q=new Date(x.getFullYear(),x.getMonth(),h,D.initHour);l=function(I,H){var i=e[I];r=+m.clearTime(q,true);i.firstChild.dateValue=r;if(H){i.className=i.className+" "+H}};for(;v<D.numDays;++v){q.setDate(q.getDate()+1);var o=e[v];if(v<f){n=(++h);b=D.prevCls}else{if(v>=j){n=(++C);b=D.nextCls}else{n=v-f+1;b=D.activeCls}}if(n=="1"||v==0){var c=Ext.clone(q);n=Ext.Date.format(c,"M j, Y")}else{if(v!=0){n=Ext.Date.format(q,"j")}}o.id="date-cell-"+q.getTime();n="<span class='date'>"+n+"</html>";o.innerHTML=n;l(v,b)}},setEvents:function(){},listeners:{monthpanelrender:"onMonthPanelRender"}});Ext.define("CalendarPackage.view.CalendarPanel",{extend:"Ext.panel.Panel",alias:["widget.calendarpanel"],requires:["CalendarPackage.view.CalendarMainController","CalendarPackage.view.CalendarMainModel","CalendarPackage.view.MonthPanel"],items:[{xtype:"monthpanel",width:"100%",height:"100%"}]});Ext.define("CalendarPackage.view.CalendarMainPanel",{extend:"Ext.panel.Panel",alias:["widget.calendarmainpanel"],requires:["Ext.layout.container.HBox","CalendarPackage.view.DatePickerPanel","CalendarPackage.view.CalendarPanel"],controller:"calendarmaincontroller",viewModel:{type:"calendarmainmodel"},layout:{type:"hbox",align:"stretch"},defaults:{frame:true},items:[{xtype:"datepickerpanel",width:215},{xtype:"calendarpanel",flex:1}]});Ext.define("CalendarPackage.view.templates.Month",{extend:"Ext.Component",requires:["Ext.XTemplate","Ext.Date"],initComponent:function(){var a=new Date();var b=me.getYear(new Date().getFullYear()-4,-4);console.log("YEAR:",b);this.callParent()},getYear:function(a,c){var b=this.value[1];c=c||0;return b===null?a:b+c}});